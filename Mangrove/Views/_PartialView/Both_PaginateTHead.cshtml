@model InfomationPaginate
@{
	var isEN = Helper.Func.IsEnglish();
}

<tr class="text-center bg-black text-white">
	@{
		string controller = Model.Controller;
		string action = Model.Action;
		string sortType = Model.sortType;
		string sortFollow = Model.sortFollow ?? "";

		string search = Model.FindText;
		int currentpage = Model.CurrentPage;
		int pageSize = Model.PageSize;

		var listStyle = Model.ListTitle;

		for (int i = 0; i < listStyle.Count(); i++)
		{
			var label = listStyle[i];
			bool outList = i == 0 || i == listStyle.Count() - 1;

			string setSortType = "";
			if (sortFollow == label)
			{
				setSortType = sortType == Helper.Key.sortASC ? Helper.Key.sortDESC : Helper.Key.sortASC;
			}
			else
			{
				setSortType = Helper.Key.sortASC;
			}

			string typeArrow = setSortType == Helper.Key.sortASC ? "fa-arrow-up" : "fa-arrow-down";

			string text = isEN ? "Click to sort " : "Click để sắp xếp ";
			if (typeArrow == "fa-arrow-up")
			{
				text += isEN ? "ascending" : "tăng dần";
			}
			else
			{
				text += isEN ? "descending" : "giảm dần";
			}

			string setMaxWidthHead = "";
			if (i == 0) setMaxWidthHead = "width: 60px !important;";
			else if (i == listStyle.Count() - 1) setMaxWidthHead = "width: 110px !important;";

			<th class="head_sort position-relative" style="@setMaxWidthHead">
				@if (outList)
				{
					<a class="h-100 w-100 d-block">@label</a>
				}
				else
				{
					<a href='@Url.Action(action, controller, new { search=search, currentpage=currentpage, pageSize=pageSize, sortType=setSortType, sortFollow=label })'
					   class="h-100 w-100 d-block btn_loading"
					   title="@text">
						@label
					</a>
					<i class="icon_sort fa-solid @typeArrow"></i>
				}
			</th>
		}
	}
</tr>